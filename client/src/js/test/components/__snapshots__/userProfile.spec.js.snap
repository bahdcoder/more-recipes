// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The UserProfile component should mount without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserProfile
    authUser={
      Object {
        "user": Object {
          "id": 1,
          "name": "test user",
        },
      }
    }
    changeRouterQueryParams={[Function]}
    findUser={[Function]}
    location={
      Object {
        "pathname": "",
        "query": Object {
          "query": "",
        },
      }
    }
    params={
      Object {
        "id": 1,
      }
    }
    router={Object {}}
    signOut={[Function]}
    triggerGetRecipesCatalog={[Function]}
    updateUserProfile={[Function]}
    users={
      Array [
        Object {
          "about": "",
          "email": "test@user.com",
          "id": 1,
          "name": "test user",
          "recipes": Array [],
          "settings": Object {
            "favoriteModifiedEmail": 1,
            "reviewEmails": 1,
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <Navbar
          authUser={
            Object {
              "user": Object {
                "id": 1,
                "name": "test user",
              },
            }
          }
          changeRouterQueryParams={[Function]}
          findUser={[Function]}
          location={
            Object {
              "pathname": "",
              "query": Object {
                "query": "",
              },
            }
          }
          params={
            Object {
              "id": 1,
            }
          }
          router={Object {}}
          signOut={[Function]}
          triggerGetRecipesCatalog={[Function]}
          updateUserProfile={[Function]}
          users={
            Array [
              Object {
                "about": "",
                "email": "test@user.com",
                "id": 1,
                "name": "test user",
                "recipes": Array [],
                "settings": Object {
                  "favoriteModifiedEmail": 1,
                  "reviewEmails": 1,
                },
              },
            ]
          }
        />,
        <div
          className="container my-5"
        >
          <div
            className="row justify-content-center"
          >
            <div
              className="col-lg-8 col-md-8 text-center wow fadeIn"
            >
              <div
                className="justify-content-center mx-auto my-5"
              >
                <Gravatar
                  default="retro"
                  email="test@user.com"
                  protocol="//"
                  rating="g"
                  size={50}
                  style={
                    Object {
                      "borderRadius": "100%",
                      "height": 90,
                      "width": 90,
                    }
                  }
                />
              </div>
              <h1
                className="text-center header-color"
              >
                test user
              </h1>
              <p
                className="text-center my-4"
              >
                <span
                  className="mr-3 h2 header-color"
                >
                   
                  0
                   
                </span>
                 
                <span
                  className="h6 mr-3"
                >
                  <Link
                    className="color-darker"
                    onlyActiveOnIndex={false}
                    style={
                      Object {
                        "textDecoration": "none",
                      }
                    }
                    to="/user/1/recipes"
                  >
                    RECIPES
                  </Link>
                </span>
              </p>
              <p
                className="text-center my-4"
              >
                
              </p>
              <br />
              <button
                className="btn btn-primary"
                id="startEditing"
                onClick={[Function]}
              >
                <i
                  className="ion ion-edit"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                />
              </button>
            </div>
          </div>
        </div>,
        <br />,
        <br />,
        <Footer />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "authUser": Object {
            "user": Object {
              "id": 1,
              "name": "test user",
            },
          },
          "changeRouterQueryParams": [Function],
          "findUser": [Function],
          "location": Object {
            "pathname": "",
            "query": Object {
              "query": "",
            },
          },
          "params": Object {
            "id": 1,
          },
          "router": Object {},
          "signOut": [Function],
          "triggerGetRecipesCatalog": [Function],
          "updateUserProfile": [Function],
          "users": Array [
            Object {
              "about": "",
              "email": "test@user.com",
              "id": 1,
              "name": "test user",
              "recipes": Array [],
              "settings": Object {
                "favoriteModifiedEmail": 1,
                "reviewEmails": 1,
              },
            },
          ],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="row justify-content-center"
          >
            <div
              className="col-lg-8 col-md-8 text-center wow fadeIn"
            >
              <div
                className="justify-content-center mx-auto my-5"
              >
                <Gravatar
                  default="retro"
                  email="test@user.com"
                  protocol="//"
                  rating="g"
                  size={50}
                  style={
                    Object {
                      "borderRadius": "100%",
                      "height": 90,
                      "width": 90,
                    }
                  }
                />
              </div>
              <h1
                className="text-center header-color"
              >
                test user
              </h1>
              <p
                className="text-center my-4"
              >
                <span
                  className="mr-3 h2 header-color"
                >
                   
                  0
                   
                </span>
                 
                <span
                  className="h6 mr-3"
                >
                  <Link
                    className="color-darker"
                    onlyActiveOnIndex={false}
                    style={
                      Object {
                        "textDecoration": "none",
                      }
                    }
                    to="/user/1/recipes"
                  >
                    RECIPES
                  </Link>
                </span>
              </p>
              <p
                className="text-center my-4"
              >
                
              </p>
              <br />
              <button
                className="btn btn-primary"
                id="startEditing"
                onClick={[Function]}
              >
                <i
                  className="ion ion-edit"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                />
              </button>
            </div>
          </div>,
          "className": "container my-5",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="col-lg-8 col-md-8 text-center wow fadeIn"
            >
              <div
                className="justify-content-center mx-auto my-5"
              >
                <Gravatar
                  default="retro"
                  email="test@user.com"
                  protocol="//"
                  rating="g"
                  size={50}
                  style={
                    Object {
                      "borderRadius": "100%",
                      "height": 90,
                      "width": 90,
                    }
                  }
                />
              </div>
              <h1
                className="text-center header-color"
              >
                test user
              </h1>
              <p
                className="text-center my-4"
              >
                <span
                  className="mr-3 h2 header-color"
                >
                   
                  0
                   
                </span>
                 
                <span
                  className="h6 mr-3"
                >
                  <Link
                    className="color-darker"
                    onlyActiveOnIndex={false}
                    style={
                      Object {
                        "textDecoration": "none",
                      }
                    }
                    to="/user/1/recipes"
                  >
                    RECIPES
                  </Link>
                </span>
              </p>
              <p
                className="text-center my-4"
              >
                
              </p>
              <br />
              <button
                className="btn btn-primary"
                id="startEditing"
                onClick={[Function]}
              >
                <i
                  className="ion ion-edit"
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                />
              </button>
            </div>,
            "className": "row justify-content-center",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="justify-content-center mx-auto my-5"
                >
                  <Gravatar
                    default="retro"
                    email="test@user.com"
                    protocol="//"
                    rating="g"
                    size={50}
                    style={
                      Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      }
                    }
                  />
                </div>,
                <h1
                  className="text-center header-color"
                >
                  test user
                </h1>,
                <p
                  className="text-center my-4"
                >
                  <span
                    className="mr-3 h2 header-color"
                  >
                     
                    0
                     
                  </span>
                   
                  <span
                    className="h6 mr-3"
                  >
                    <Link
                      className="color-darker"
                      onlyActiveOnIndex={false}
                      style={
                        Object {
                          "textDecoration": "none",
                        }
                      }
                      to="/user/1/recipes"
                    >
                      RECIPES
                    </Link>
                  </span>
                </p>,
                <p
                  className="text-center my-4"
                >
                  
                </p>,
                undefined,
                <br />,
                <button
                  className="btn btn-primary"
                  id="startEditing"
                  onClick={[Function]}
                >
                  <i
                    className="ion ion-edit"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  />
                </button>,
              ],
              "className": "col-lg-8 col-md-8 text-center wow fadeIn",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Gravatar
                    default="retro"
                    email="test@user.com"
                    protocol="//"
                    rating="g"
                    size={50}
                    style={
                      Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      }
                    }
                  />,
                  "className": "justify-content-center mx-auto my-5",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "default": "retro",
                    "email": "test@user.com",
                    "protocol": "//",
                    "rating": "g",
                    "size": 50,
                    "style": Object {
                      "borderRadius": "100%",
                      "height": 90,
                      "width": 90,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "test user",
                  "className": "text-center header-color",
                },
                "ref": null,
                "rendered": "test user",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <span
                      className="mr-3 h2 header-color"
                    >
                       
                      0
                       
                    </span>,
                    " ",
                    <span
                      className="h6 mr-3"
                    >
                      <Link
                        className="color-darker"
                        onlyActiveOnIndex={false}
                        style={
                          Object {
                            "textDecoration": "none",
                          }
                        }
                        to="/user/1/recipes"
                      >
                        RECIPES
                      </Link>
                    </span>,
                  ],
                  "className": "text-center my-4",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        " ",
                        0,
                        " ",
                      ],
                      "className": "mr-3 h2 header-color",
                    },
                    "ref": null,
                    "rendered": Array [
                      " ",
                      0,
                      " ",
                    ],
                    "type": "span",
                  },
                  " ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        className="color-darker"
                        onlyActiveOnIndex={false}
                        style={
                          Object {
                            "textDecoration": "none",
                          }
                        }
                        to="/user/1/recipes"
                      >
                        RECIPES
                      </Link>,
                      "className": "h6 mr-3",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": "RECIPES",
                        "className": "color-darker",
                        "onlyActiveOnIndex": false,
                        "style": Object {
                          "textDecoration": "none",
                        },
                        "to": "/user/1/recipes",
                      },
                      "ref": null,
                      "rendered": "RECIPES",
                      "type": [Function],
                    },
                    "type": "span",
                  },
                ],
                "type": "p",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "",
                  "className": "text-center my-4",
                },
                "ref": null,
                "rendered": "",
                "type": "p",
              },
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <i
                    className="ion ion-edit"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  />,
                  "className": "btn btn-primary",
                  "id": "startEditing",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "className": "ion ion-edit",
                    "style": Object {
                      "color": "white",
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "i",
                },
                "type": "button",
              },
            ],
            "type": "div",
          },
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "br",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Navbar
            authUser={
              Object {
                "user": Object {
                  "id": 1,
                  "name": "test user",
                },
              }
            }
            changeRouterQueryParams={[Function]}
            findUser={[Function]}
            location={
              Object {
                "pathname": "",
                "query": Object {
                  "query": "",
                },
              }
            }
            params={
              Object {
                "id": 1,
              }
            }
            router={Object {}}
            signOut={[Function]}
            triggerGetRecipesCatalog={[Function]}
            updateUserProfile={[Function]}
            users={
              Array [
                Object {
                  "about": "",
                  "email": "test@user.com",
                  "id": 1,
                  "name": "test user",
                  "recipes": Array [],
                  "settings": Object {
                    "favoriteModifiedEmail": 1,
                    "reviewEmails": 1,
                  },
                },
              ]
            }
          />,
          <div
            className="container my-5"
          >
            <div
              className="row justify-content-center"
            >
              <div
                className="col-lg-8 col-md-8 text-center wow fadeIn"
              >
                <div
                  className="justify-content-center mx-auto my-5"
                >
                  <Gravatar
                    default="retro"
                    email="test@user.com"
                    protocol="//"
                    rating="g"
                    size={50}
                    style={
                      Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      }
                    }
                  />
                </div>
                <h1
                  className="text-center header-color"
                >
                  test user
                </h1>
                <p
                  className="text-center my-4"
                >
                  <span
                    className="mr-3 h2 header-color"
                  >
                     
                    0
                     
                  </span>
                   
                  <span
                    className="h6 mr-3"
                  >
                    <Link
                      className="color-darker"
                      onlyActiveOnIndex={false}
                      style={
                        Object {
                          "textDecoration": "none",
                        }
                      }
                      to="/user/1/recipes"
                    >
                      RECIPES
                    </Link>
                  </span>
                </p>
                <p
                  className="text-center my-4"
                >
                  
                </p>
                <br />
                <button
                  className="btn btn-primary"
                  id="startEditing"
                  onClick={[Function]}
                >
                  <i
                    className="ion ion-edit"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  />
                </button>
              </div>
            </div>
          </div>,
          <br />,
          <br />,
          <Footer />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "authUser": Object {
              "user": Object {
                "id": 1,
                "name": "test user",
              },
            },
            "changeRouterQueryParams": [Function],
            "findUser": [Function],
            "location": Object {
              "pathname": "",
              "query": Object {
                "query": "",
              },
            },
            "params": Object {
              "id": 1,
            },
            "router": Object {},
            "signOut": [Function],
            "triggerGetRecipesCatalog": [Function],
            "updateUserProfile": [Function],
            "users": Array [
              Object {
                "about": "",
                "email": "test@user.com",
                "id": 1,
                "name": "test user",
                "recipes": Array [],
                "settings": Object {
                  "favoriteModifiedEmail": 1,
                  "reviewEmails": 1,
                },
              },
            ],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="row justify-content-center"
            >
              <div
                className="col-lg-8 col-md-8 text-center wow fadeIn"
              >
                <div
                  className="justify-content-center mx-auto my-5"
                >
                  <Gravatar
                    default="retro"
                    email="test@user.com"
                    protocol="//"
                    rating="g"
                    size={50}
                    style={
                      Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      }
                    }
                  />
                </div>
                <h1
                  className="text-center header-color"
                >
                  test user
                </h1>
                <p
                  className="text-center my-4"
                >
                  <span
                    className="mr-3 h2 header-color"
                  >
                     
                    0
                     
                  </span>
                   
                  <span
                    className="h6 mr-3"
                  >
                    <Link
                      className="color-darker"
                      onlyActiveOnIndex={false}
                      style={
                        Object {
                          "textDecoration": "none",
                        }
                      }
                      to="/user/1/recipes"
                    >
                      RECIPES
                    </Link>
                  </span>
                </p>
                <p
                  className="text-center my-4"
                >
                  
                </p>
                <br />
                <button
                  className="btn btn-primary"
                  id="startEditing"
                  onClick={[Function]}
                >
                  <i
                    className="ion ion-edit"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  />
                </button>
              </div>
            </div>,
            "className": "container my-5",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="col-lg-8 col-md-8 text-center wow fadeIn"
              >
                <div
                  className="justify-content-center mx-auto my-5"
                >
                  <Gravatar
                    default="retro"
                    email="test@user.com"
                    protocol="//"
                    rating="g"
                    size={50}
                    style={
                      Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      }
                    }
                  />
                </div>
                <h1
                  className="text-center header-color"
                >
                  test user
                </h1>
                <p
                  className="text-center my-4"
                >
                  <span
                    className="mr-3 h2 header-color"
                  >
                     
                    0
                     
                  </span>
                   
                  <span
                    className="h6 mr-3"
                  >
                    <Link
                      className="color-darker"
                      onlyActiveOnIndex={false}
                      style={
                        Object {
                          "textDecoration": "none",
                        }
                      }
                      to="/user/1/recipes"
                    >
                      RECIPES
                    </Link>
                  </span>
                </p>
                <p
                  className="text-center my-4"
                >
                  
                </p>
                <br />
                <button
                  className="btn btn-primary"
                  id="startEditing"
                  onClick={[Function]}
                >
                  <i
                    className="ion ion-edit"
                    style={
                      Object {
                        "color": "white",
                      }
                    }
                  />
                </button>
              </div>,
              "className": "row justify-content-center",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="justify-content-center mx-auto my-5"
                  >
                    <Gravatar
                      default="retro"
                      email="test@user.com"
                      protocol="//"
                      rating="g"
                      size={50}
                      style={
                        Object {
                          "borderRadius": "100%",
                          "height": 90,
                          "width": 90,
                        }
                      }
                    />
                  </div>,
                  <h1
                    className="text-center header-color"
                  >
                    test user
                  </h1>,
                  <p
                    className="text-center my-4"
                  >
                    <span
                      className="mr-3 h2 header-color"
                    >
                       
                      0
                       
                    </span>
                     
                    <span
                      className="h6 mr-3"
                    >
                      <Link
                        className="color-darker"
                        onlyActiveOnIndex={false}
                        style={
                          Object {
                            "textDecoration": "none",
                          }
                        }
                        to="/user/1/recipes"
                      >
                        RECIPES
                      </Link>
                    </span>
                  </p>,
                  <p
                    className="text-center my-4"
                  >
                    
                  </p>,
                  undefined,
                  <br />,
                  <button
                    className="btn btn-primary"
                    id="startEditing"
                    onClick={[Function]}
                  >
                    <i
                      className="ion ion-edit"
                      style={
                        Object {
                          "color": "white",
                        }
                      }
                    />
                  </button>,
                ],
                "className": "col-lg-8 col-md-8 text-center wow fadeIn",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Gravatar
                      default="retro"
                      email="test@user.com"
                      protocol="//"
                      rating="g"
                      size={50}
                      style={
                        Object {
                          "borderRadius": "100%",
                          "height": 90,
                          "width": 90,
                        }
                      }
                    />,
                    "className": "justify-content-center mx-auto my-5",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "default": "retro",
                      "email": "test@user.com",
                      "protocol": "//",
                      "rating": "g",
                      "size": 50,
                      "style": Object {
                        "borderRadius": "100%",
                        "height": 90,
                        "width": 90,
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "test user",
                    "className": "text-center header-color",
                  },
                  "ref": null,
                  "rendered": "test user",
                  "type": "h1",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <span
                        className="mr-3 h2 header-color"
                      >
                         
                        0
                         
                      </span>,
                      " ",
                      <span
                        className="h6 mr-3"
                      >
                        <Link
                          className="color-darker"
                          onlyActiveOnIndex={false}
                          style={
                            Object {
                              "textDecoration": "none",
                            }
                          }
                          to="/user/1/recipes"
                        >
                          RECIPES
                        </Link>
                      </span>,
                    ],
                    "className": "text-center my-4",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          0,
                          " ",
                        ],
                        "className": "mr-3 h2 header-color",
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        0,
                        " ",
                      ],
                      "type": "span",
                    },
                    " ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          className="color-darker"
                          onlyActiveOnIndex={false}
                          style={
                            Object {
                              "textDecoration": "none",
                            }
                          }
                          to="/user/1/recipes"
                        >
                          RECIPES
                        </Link>,
                        "className": "h6 mr-3",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": "RECIPES",
                          "className": "color-darker",
                          "onlyActiveOnIndex": false,
                          "style": Object {
                            "textDecoration": "none",
                          },
                          "to": "/user/1/recipes",
                        },
                        "ref": null,
                        "rendered": "RECIPES",
                        "type": [Function],
                      },
                      "type": "span",
                    },
                  ],
                  "type": "p",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                    "className": "text-center my-4",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "p",
                },
                undefined,
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <i
                      className="ion ion-edit"
                      style={
                        Object {
                          "color": "white",
                        }
                      }
                    />,
                    "className": "btn btn-primary",
                    "id": "startEditing",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "className": "ion ion-edit",
                      "style": Object {
                        "color": "white",
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": "i",
                  },
                  "type": "button",
                },
              ],
              "type": "div",
            },
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "br",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
